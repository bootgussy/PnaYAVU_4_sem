package com.bootgussy.dancecenterservice.core.mapper;

import com.bootgussy.dancecenterservice.api.dto.create.HallCreateDto;
import com.bootgussy.dancecenterservice.api.dto.response.HallResponseDto;
import com.bootgussy.dancecenterservice.core.model.Hall;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2025-05-27T13:13:37+0300",
    comments = "version: 1.5.2.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-8.12.1.jar, environment: Java 23.0.2 (Oracle Corporation)"
)
@Component
public class HallMapperImpl extends HallMapper {

    @Override
    public Hall toEntity(HallCreateDto hallCreateDto) {
        if ( hallCreateDto == null ) {
            return null;
        }

        Hall.HallBuilder hall = Hall.builder();

        hall.name( hallCreateDto.getName() );
        hall.area( hallCreateDto.getArea() );

        return hall.build();
    }

    @Override
    public HallResponseDto toResponseDto(Hall hall) {
        if ( hall == null ) {
            return null;
        }

        HallResponseDto.HallResponseDtoBuilder hallResponseDto = HallResponseDto.builder();

        hallResponseDto.id( hall.getId() );
        hallResponseDto.name( hall.getName() );
        hallResponseDto.area( hall.getArea() );

        hallResponseDto.scheduleItemsId( hall.getScheduleItems() != null ? hall.getScheduleItems().stream().map(s -> s.getId()).toList() : new ArrayList<>() );

        return hallResponseDto.build();
    }

    @Override
    public List<HallResponseDto> toResponseDtoList(List<Hall> halls) {
        if ( halls == null ) {
            return null;
        }

        List<HallResponseDto> list = new ArrayList<HallResponseDto>( halls.size() );
        for ( Hall hall : halls ) {
            list.add( toResponseDto( hall ) );
        }

        return list;
    }
}
